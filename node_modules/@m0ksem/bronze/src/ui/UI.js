/**
 * Object that allows you to create UI interface.
 * @class
 * @constructor
 * @param {Engine} engine Engine where UI needs to be binded
 * @param {Canvas} canvas canvas where UI needs to be drawn
 */
export class UI {
  constructor (engine, canvas) {
    /**
     * Binded engine.
     * @private
     */
    this.engine = engine
    // if (!canvas) {
    //   canvas = document.createElement('canvas')
    //   let div = document.createElement('div')
    //       div.id = "Bronze-Engine"
    //   engine.canvas.parentNode.replaceChild(div, engine.canvas)
    //   // engine.canvas.parentNode.removeChild(engine.canvas)
    //   div.appendChild(engine.canvas)
    //   div.appendChild(canvas)
    // }
    
    // canvas.width = engine.width
    // canvas.height = engine.height
    // canvas.position = 'absolute'
    // canvas.style = 'position: absolute; width: 100%; height: 100%; top: 0; left: 0;'
    // canvas.left = 0
    // canvas.top = 0
    // canvas.zIndex = 10000
    // canvas.background = 'ded'
    // this.canvas = canvas

    // this.context = canvas.getContext('2d')
  }
}